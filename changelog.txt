03.12.2006
    Release 1.1.0

02.12.2006
    Fixed: Free for mode string failed in debug mode in VC6, commented
        out.

30.11.2006
    Changed: Renamed setOptioni -> setOption, getOptioni -> getOption.
    Changed: Refined offscreen buffer resizing.

29.11.2006
    Fixed: Offscreen buffer resizing issue with alternating buffers
        of the resolution (x1, y1) / (x2, y2) where x1>x2 but y1<y2.
        In that case the offscreen buffer was permanently recreated.
        The new implementation is clearer and for normal use should
        have no performance overhead.

03.08.2006
    Fixed: Memory leak in RenderTexture reported a year ago to me.
    Fixed: Several issues on found on TNT2 (creepy, isn't it?):
        RenderTexture actually did not support copy-to-texture only,
        because ARB_render_texture was checked in error
        copy-to-texture was not requested anyway.
        most interesting: TNT2 generates different depth values
        for shade model GL_FLAT vs. GL_POLYGON. The shade model
        now is not set anymore, which solves the problem and should
        neither cause regressions or performance loss. I wonder whether
        in previous OpenCSG versions this was no problem for me. Maybe
        a driver issue.

30.07.2006
    Fixed: Linux stuff
        Assertion when frame buffer object extension is not available

28.07.2006
    Changed: Lots of cosmetical and documentation updates

27.07.2006
    Changed: made pbuffer path default again (no real performance gain
        width FBO, less tested)

25.07.2006
    Changed: some more or less trivial STL performance improvements
        do not glPushAttrib / glPopAttrib when enabling / disabling
        frame buffer object anymore

23.07.2006
    Fixed: Explicitely disable 1D/2D texturing and blending when creating
        channel manager to fix rendering problems in frame buffer object
        path if those settings are enabled

21.07.2006
    Fixed: automatic offscreen option is now considered in some way (in
        doubt, frame buffer object is used).
        Correctly check also for packed_depth_stencil extension before 
        using frame objects

21.07.2006    
    Fixed: two stack overflows in pbuffer path
        
        
20.07.2006
    Added: getOptioni / setOptioni interface
        OffscreenType setting to switch between framebuffer objects and pbuffer
        offscreenBuffer abstract base class to support this and corresponding
        implementations frameBufferObject and pBufferTexture
        Added such options in example program

12.07.2006
    Fixed: SCS / depth-complexity sampling / FBO: After depth-complexity
        sampling, stencil test was enabled resulting in rendering errors

03.07.2006
    Fixed: Infinite recursion when resizing viewer in framebuffer
        object code

11.01.2006
    Added: Framebuffer object support

16.12.2004
    Changed: Moved opencsgConfig.h to src directory. It is not
        anymore included by opencsg.h

16.12.2004
    Fixed: std::min and std::max should now work with VC 7.0.
        It is really braindead that such a trivial thing is 
        not trivial in practice.

04.12.2004
    Release 1.0.2

26.11.2004
    Added: Workspace for dev-cpp 4.9.9.0

26.11.2004
    Changed: queries for the p-buffer facilities in RenderTexture

28.09.2004
    Fixed: refactored heuristic for depth complexity sampling
        thereby fixing an odd performance bug

27.09.2004
    Release 1.0.1

25.09.2004
    Fixed: stupid bug in respect scissoring change

24.09.2004
    Added: respect scissoring setting of OpenGL; calculate CSG
        z-values only in the given scissor area.

23.09.2004
    Added: StencilManager, that, in future will possibly save and 
        restore the stencil buffer of the main frame buffer. The
        StencilManager is currently deactivated, though.

06.08.2004
    Fixed: RenderTexture did not report the correct stencil size
        of the pbuffer under linux. The expected values are now
        written there by hand.

20.07.2004
    Changed: Updated RenderTexture to version 2.0.3. This requires 
        further testing on all possible platforms because I have 
        removed some private hacks due to this change.

02.05.2004
    Release 1.0.0

22.04.2004:
    Changed: Makefiles on Linux are now derived from qmake. However,
        the provided Makefiles should work directly without using
        qmake, it is best to stick with them.

22.04.2004: 
    Changed: Compile a shared library on Linux now

08.04.2004:
    Changed: When possible use GL_TEXTURE_RECTANGLE_NV texture format
        even if GL_TEXTURE_2D would work also. The former appears to be
        faster. 

29.03.2004
    Changed: Scissoring area was chosen too big, because I had 
        confused width/height with right/top margin. This is fixed
        now, resulting in better performance for some models

25.03.2004
    Added: Area structs for pixel and normalized device coordinates. 
        Used to speed up depth complexity sampling by restricting 
        readback to smaller Area
    Added: Check whether primitive vector is empty

24.03.2004
    Changed: Hided occlusion query implementations in cpp
        Renamed OcclusionQueryAdapter to OcclusionQuery

02.03.2004
    Release 0.9.2

17.02.2004
    Added: Support for ARB_occlusion_query extension

21.11.2003:
    Release 0.9.1

21.11.2003:
    Fixed: std::max() std::min() issue with .net

18.11.2003:
    Fixed: Bug with heuristic for resizing the pbuffer-resizing
        that occured for request for sizes of the form 512x1024
        -> 1024x512 -> 512x1024 -> ... (and similar series)

06.11.2003: 
    Added: Detection of GL_FRONT_FACE OpenGL setting. This means that
        CSG rendering is now also correct if this setting is the
        non-default clockwise setting.

04.11.2003: 
    Fixed: Stenciling was not disabled in SCS algorithm when 
        subtracting no shapes. This could lead to obscure rendering 
        errors when rendering the next CSG shape. 

02.11.2003: 
    Added: Heuristic that makes the pbuffer smaller 
        if the size of the pbuffer has been bigger than necessary in 
        x- or y- direction for a certain number of render-calles. 
        This permits to use OpenCSG for CSG rendering in different
        canvases with different sizes without constant expensive
        resizing of the pbuffer for every frame.

01.10.2003 
    Fixed: linux: removed accidental linking against tcl/tk  

23.09.2003: 
    Release 0.9

