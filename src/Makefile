#############################################################################
# Makefile for building: libopencsg.so.1.0.2
# Generated by qmake (1.06c) (Qt 3.2.0) on: Thu Apr 22 16:02:49 2004
# Project:  src.pro
# Template: lib
# Command: $(QMAKE) -o Makefile src.pro
#############################################################################

####### Compiler, tools and options

CC       = gcc
CXX      = g++
LEX      = flex
YACC     = yacc
CFLAGS   = -pipe -Wall -W -O2 -fPIC 
CXXFLAGS = -pipe -Wall -W -O2 -fPIC
LEXFLAGS = 
YACCFLAGS= -d
INCPATH  = -I. -I../include -I../glew/include -I.. -I/usr/X11R6/include
LINK     = g++
LFLAGS   =  -shared -Wl,-soname,libopencsg.so.1 -Wl,-rpath,../lib
LIBS     = $(SUBLIBS) -L/usr/X11R6/lib -lGLU -lGL -lXmu
AR       = ar cqs
RANLIB   = 
MOC      = $(QTDIR)/bin/moc
UIC      = $(QTDIR)/bin/uic
QMAKE    = qmake
TAR      = tar -cf
GZIP     = gzip -9f
COPY     = cp -f
COPY_FILE= $(COPY)
COPY_DIR = $(COPY) -r
DEL_FILE = rm -f
SYMLINK  = ln -sf
DEL_DIR  = rmdir
MOVE     = mv -f
CHK_DIR_EXISTS= test -d
MKDIR    = mkdir -p

####### Output directory

OBJECTS_DIR = ./

####### Files

HEADERS = ../include/opencsg.h \
		../include/opencsgConfig.h \
		area.h \
		batch.h \
		channelManager.h \
		occlusionQuery.h \
		opencsgRender.h \
		openglHelper.h \
		primitiveHelper.h \
		scissorMemo.h \
		stencilManager.h \
		../RenderTexture/RenderTexture.h
SOURCES = area.cpp \
		batch.cpp \
		channelManager.cpp \
		occlusionQuery.cpp \
		opencsgRender.cpp \
		openglHelper.cpp \
		primitive.cpp \
		primitiveHelper.cpp \
		renderGoldfeather.cpp \
		renderSCS.cpp \
		scissorMemo.cpp \
		stencilManager.cpp \
		../RenderTexture/RenderTexture.cpp
OBJECTS = area.o \
		batch.o \
		channelManager.o \
		occlusionQuery.o \
		opencsgRender.o \
		openglHelper.o \
		primitive.o \
		primitiveHelper.o \
		renderGoldfeather.o \
		renderSCS.o \
		scissorMemo.o \
		stencilManager.o \
		RenderTexture.o
FORMS = 
UICDECLS = 
UICIMPLS = 
SRCMOC   = 
OBJMOC = 
DIST	   = src.pro
QMAKE_TARGET = opencsg
DESTDIR  = ../lib/
TARGET   = libopencsg.so.1.0.2
TARGETA	= ../lib/libopencsg.a
TARGETD	= libopencsg.so.1.0.2
TARGET0	= libopencsg.so
TARGET1	= libopencsg.so.1
TARGET2	= libopencsg.so.1.0

first: all
####### Implicit rules

.SUFFIXES: .c .o .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules

all: Makefile  ../lib/$(TARGET)

../lib/$(TARGET):  $(UICDECLS) $(OBJECTS) $(OBJMOC) $(SUBLIBS) $(OBJCOMP)  
	test -d ../lib/ || mkdir -p ../lib/
	-$(DEL_FILE) $(TARGET) $(TARGET0) $(TARGET1) $(TARGET2)
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJMOC) $(LIBS) $(OBJCOMP)
	-ln -s $(TARGET) $(TARGET0)
	-ln -s $(TARGET) $(TARGET1)
	-ln -s $(TARGET) $(TARGET2)
	-$(DEL_FILE) ../lib/$(TARGET)
	-$(DEL_FILE) ../lib/$(TARGET0)
	-$(DEL_FILE) ../lib/$(TARGET1)
	-$(DEL_FILE) ../lib/$(TARGET2)
	-$(MOVE) $(TARGET) $(TARGET0) $(TARGET1) $(TARGET2) ../lib/



staticlib: $(TARGETA)

$(TARGETA):  $(UICDECLS) $(OBJECTS) $(OBJMOC) $(OBJCOMP)
	-$(DEL_FILE) $(TARGETA) 
	$(AR) $(TARGETA) $(OBJECTS) $(OBJMOC)

mocables: $(SRCMOC)
uicables: $(UICDECLS) $(UICIMPLS)

$(MOC): 
	( cd $(QTDIR)/src/moc ; $(MAKE) )

dist: 
	@mkdir -p .tmp/opencsg && $(COPY_FILE) --parents $(SOURCES) $(HEADERS) $(FORMS) $(DIST) .tmp/opencsg/ && ( cd `dirname .tmp/opencsg` && $(TAR) opencsg.tar opencsg && $(GZIP) opencsg.tar ) && $(MOVE) `dirname .tmp/opencsg`/opencsg.tar.gz . && $(DEL_FILE) -r .tmp/opencsg

mocclean:

uiclean:

yaccclean:
lexclean:
clean:
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) ../lib/$(TARGET) $(TARGET)
	-$(DEL_FILE) ../lib/$(TARGET0) ../lib/$(TARGET1) ../lib/$(TARGET2) $(TARGETA)


FORCE:

####### Compile

area.o: area.cpp area.h \
		openglHelper.h

batch.o: batch.cpp batch.h \
		primitiveHelper.h \
		area.h

channelManager.o: channelManager.cpp channelManager.h \
		openglHelper.h \
		area.h

occlusionQuery.o: occlusionQuery.cpp occlusionQuery.h

opencsgRender.o: opencsgRender.cpp opencsgRender.h \
		primitiveHelper.h \
		area.h

openglHelper.o: openglHelper.cpp openglHelper.h \
		area.h

primitive.o: primitive.cpp 

primitiveHelper.o: primitiveHelper.cpp openglHelper.h \
		primitiveHelper.h \
		area.h

renderGoldfeather.o: renderGoldfeather.cpp opencsgRender.h \
		batch.h \
		channelManager.h \
		occlusionQuery.h \
		openglHelper.h \
		primitiveHelper.h \
		scissorMemo.h \
		stencilManager.h \
		area.h

renderSCS.o: renderSCS.cpp opencsgRender.h \
		batch.h \
		channelManager.h \
		occlusionQuery.h \
		openglHelper.h \
		primitiveHelper.h \
		scissorMemo.h \
		area.h

scissorMemo.o: scissorMemo.cpp openglHelper.h \
		scissorMemo.h \
		area.h \
		channelManager.h

stencilManager.o: stencilManager.cpp area.h \
		stencilManager.h	

RenderTexture.o: ../RenderTexture/RenderTexture.cpp ../RenderTexture/RenderTexture.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o RenderTexture.o ../RenderTexture/RenderTexture.cpp

####### Install

install: all 

uninstall: 

